buildscript{
	ext {
        protobufVersion = '3.17.3'
        protobufPluginVersion = '0.8.16'
        grpcVersion = '1.38.0'
    }
}

plugins {
	id 'java'
	id 'eclipse'
	id 'org.springframework.boot' version '2.1.0.RELEASE'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'com.google.protobuf' version "${protobufPluginVersion}"
}


version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}


ext {
	set("springCloudVersion", 'Greenwich.RELEASE')
}

dependencies {
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.cloud:spring-cloud-config-client'
	implementation 'org.json:json:20220924' 

	/* // https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api
	implementation 'javax.servlet:javax.servlet-api' */

	implementation "io.grpc:grpc-protobuf:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"

	implementation 'net.devh:grpc-server-spring-boot-starter:2.11.0.RELEASE'
	
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

jar {	 
	baseName = 'grpc-auth-server'
	version = '0.0.1-SNAPSHOT'
}

bootJar {
   baseName = 'grpc-auth-server'
	version = '0.0.1-SNAPSHOT'
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:${protobufVersion}"
    }
    clean {
        delete "$generatedFilesBaseDir/main/protoGen"
    }

    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:1.37.0"
        }
    }

    generateProtoTasks {
        ofSourceSet('main').each { task ->
            task.builtins {
                java {
                    outputSubDir = 'protoGen'
                }
            }
            task.plugins {
                grpc {
                    outputSubDir = 'protoGen'
                }
            }
        }
    }

    generatedFilesBaseDir = "$projectDir/src/"
}